※※※※※※※※※※ 클라이언트와의 대화 1 : 쿠키 ※※※※※※※※※※

1. 쿠키 사용하기
(1) 쿠키 
- 웹브라우저가 보관하는 데이터
- 웹서버에 요청을 보낼 때 쿠키를 같이 전송한다.
- 서버는 쿠키를 사용해서 필요한 데이터를 읽을 수 있다.
- 구성 : 이름, 값, 유효시간, 도메인, 경로
  → 위 구성들을 각각 설정이 가능하다. ex) 어떤 도메인에서 생성할지, 어떤 경로의 쿠키를 보낼 지

(2) 쿠키 클래스가 제공하는 메소드
- 구성의 getter, setter들. ex) getName(), getDomain(), setPath() ...
- 209p 참조

(3) 쿠키의 도메인 
- 쿠키에는 해당 쿠키가 생성된 도메인의 정보가 저장되어 있다.
- setDomain()을 통해 쿠키가 유효한 도메인을 변경할 수 있다.
  → 실제로 변경하는 일은 드물다.

(4) 쿠키의 유효시간
- 유효시간을 setMaxAge()로 초단위로 설정 가능하다.
- setMaxAge()를 0으로 만들면 쿠키의 삭제가 가능하다.



※※※※※※※※※※ 클라이언트와의 대화 2 : 세션 ※※※※※※※※※※

1. 




※※※※※※※※※※ 표현언어 ※※※※※※※※※※

1. 표현언어 : 값을 표현하는데 사용하는 스크립트언어. jsp의 스크립트 요소를 보완한다.
(1) 표현언어의 기능
- jsp의 네가지 기본 객체가 제공하는 영역의 속성 사용
- 수치 연산, 관계 연산, 논리 연산자 제공
- 자바 클래스, 메소드 호출 기능 제공
- 쿠키, 기본 객체의 속성 등 jsp를 위한 표현언어의 기본 객체 제공
- 람다식을 이용한 함수 정의와 실행
- 스트림 API를 통한 컬렉션 처리
- 정적 메소드 실행

2. EL의 구성
(1) ${expr}과 #{expr}의 차이
- ${expr} : 값을 대입할 뿐
- #{expr} : 값을 연결시켜, 한 쪽을 바꾸면 원본도 바뀐다.
 
3. EL에서 객체의 메소드 호출
- EL에서 객체의 메소드를 직접 호출할 수 있다.

4. 커넥션 풀
- 커넥션 풀 기법 : 데이터베이스와 연결된 커넥션을 미리 만들어 풀(pool)에 저장해뒀다가 필요할때 풀에서 가져다 쓰고 다시 풀에 반환하는 기법이다.




※※※※※※※※※※ 웹 어플리케이션의 일반적인 구성 및 방명록 구현 ※※※※※※※※※※


1. 웹 어플리케이션의 전형적인 구성
- rss(xml형식), pattern1(일반적인 웹 형식)

2. 웹 어플리케이션의 주요 구성 요소
- jsp → mvc 프레임워크 → service 클래스 → dao 클래스
- service클래스 : 사용자의 요청을 처리하는 기능을 제공한다.
- dao 클래스 : db와 관련된 쿼리를 실행한다. service가 데이터를 읽거나 데이터를 저장할 때 dao 클래스를 사용한다.
- jsp : 뷰를 담당한다. service가 실행한 결과를 화면의 출력하거나 service에서 기능을 수행하는데 필요한 데이터를 전달한다.
- mvc framework : 사용자의 요청을 service에 전달하고 service의 실행 결과를 jsp와 같은 뷰에 전달한다. spring mvc와 같은 프레임 워크가 이에 해당한다.

