package ccsp.view;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.EtchedBorder;

import ccsp.models.CrimeRecordVO;
import ccsp.models.CrimeSysDAO;


public class DeletePanel extends JPanel implements ActionListener, ItemListener {
	private JPanel jp[] = new JPanel[9];
	private JLabel jl[] = new JLabel[8];
	private JTextField tf[] = new JTextField[8];
	private JButton search;
	private JButton delete;

	//項目の名前
	String[] caption = {"犯罪番号 : ", "犯罪分類 : ", "地域 : ", "性別 : ", "前科 : ", "名前 : ", "住民登録番号 : ", "発生日 : "};

	//データ削除タブのビュー
	public DeletePanel() {
		setLayout(new GridLayout(10,1));
		EtchedBorder eb = new EtchedBorder();
		setBorder(eb);
		
		int size = caption.length;
		
		//犯罪番号の入力欄
		jl[0] = new JLabel(caption[0]);
		tf[0] = new JTextField(10);
		jp[0] = new JPanel();
		jp[0].add(jl[0]);
		jp[0].add(tf[0]);
		//検索ボタン
		search = new JButton("検索");
		search.addActionListener(this);
		jp[0].add(search);
		add(jp[0]);
		//入力可能
		tf[0].setEditable(true);
		
		//犯罪者データ表示欄
		for (int i = 1; i < size; i++) {
			jl[i] = new JLabel(caption[i]);
			tf[i] = new JTextField(10);
			jp[i] = new JPanel();
			jp[i].add(jl[i]);
			jp[i].add(tf[i]);
			add(jp[i]);
			//既存のデータ表示欄は修正できません
			tf[i].setEditable(false);
		}
		
		
		jp[size] = new JPanel();
		delete = new JButton("削除");
		delete.addActionListener(this);
		jp[size].add(delete);
		add(jp[size]);
		
	}

	@Override
	public void itemStateChanged(ItemEvent ie) {

	}

	//データ削除タブの処理詳細
	@Override
	public void actionPerformed(ActionEvent ae) {
		String ae_type = ae.getActionCommand();
		CrimeRecordVO crVO = null;
		CrimeSysDAO crDAO = null;
		
		//検索ボタンのイベント処理
		if (ae_type.equals(search.getText())) {
			try {
				crDAO = new CrimeSysDAO();
				String sno = tf[0].getText().trim();
				
				//検索に数値が記入されている場合、犯罪者のデータを持ち込む
				if (!sno.equals("")) {
					int no = Integer.parseInt(sno);
					crVO = crDAO.getCriminalCheck(no);
				}
			} catch (Exception e) {
				System.out.println("e=["+e+"e");
			}
			
			//犯罪者データの持ち込みに成功した場合、テキストフィールドにデータを表示
			if (crVO != null) {
				tf[1].setText(crVO.getCrimDivNo()+"");
				tf[2].setText(crVO.getRegion()+"");
				tf[3].setText(crVO.getSex()+"");
				tf[4].setText(crVO.getcRecord()+"");
				tf[5].setText(crVO.getName()+"");
				tf[6].setText(crVO.getRegitNumber()+"");
				tf[7].setText(crVO.getDate()+"");
			
			//犯罪番号に何も記入しなかった場合や、正しくない文字を書いた場合、メッセージを表示
			} else {
				JOptionPane.showMessageDialog(this, "検索失敗");
			}
			
		//削除ボタンのイヴェント処理
		} else if(ae_type.equals(delete.getText())) {
			try {
				//'犯罪番号'入力欄に入力された数字のデータをデータベースに保存された情報を削除
				String sno = tf[0].getText().trim();
				crDAO = new CrimeSysDAO();
				if (!sno.equals("")) {
					int no = Integer.parseInt(sno);
					//入力された番号のデータベースの情報を削除
					crVO = crDAO.getCriminalDelete(no);
				}			
			} catch (Exception e) {
				System.out.println("input error");
				System.out.println("e=["+e+"e");
			}
			//入力に間違いがある場合、メッセージを表示。削除に成功したら、成功メッセージ表示
			if(crVO == null) {
				JOptionPane.showMessageDialog(this, "正しくありません"+"\n"+"犯罪番号をもう一度確認してください");
			} else {
				JOptionPane.showMessageDialog(this, "犯罪者 "+tf[5].getText()+"の"+"\n"+"個人情報が削除されました！");
			}
		} 
	}


}
